{"version":3,"file":"reactivity.global.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts"],"sourcesContent":["export const isObject = (value) => {\r\n  return typeof value === \"object\" && value !== null;\r\n};\r\nexport const extend = Object.assign;\r\nexport const isArray = Array.isArray;\r\nexport const isFunction = (value) => typeof value === \"function\";\r\nexport const isNumber = (value) => typeof value === \"number\";\r\nexport const isString = (value) => typeof value === \"string\";\r\n// 是否是整数\r\nexport const isIntegerKey = (key) => parseInt(key) + \"\" === key;\r\nexport const hasOwn = (target, key) => {\r\n  return Object.prototype.hasOwnProperty.call(target, key);\r\n};\r\nexport const hasChanged = (oldValue, value) => oldValue !== value;\r\n","import { isArray, isIntegerKey } from \"@vue/shared\";\r\nimport { TriggerOrTypes } from \"./operators\";\r\nexport function effect(fn, options: any = {}) {\r\n  const effect = createReactiveEffect(fn, options);\r\n  if (!options.lazy) {\r\n    effect(); // 响应式的effect会默认先执行一次\r\n  }\r\n\r\n  return effect;\r\n}\r\nlet uid = 0;\r\nlet activeEffect; // 存储当前的effect\r\nconst effectStack = []; // effect 函数内部可能嵌套另一个 effect，所以使用栈来存储 effect\r\nfunction createReactiveEffect(fn, options) {\r\n  const effect = function reactiveEffect() {\r\n    // 保证栈中的effect具有唯一性\r\n    if (!effectStack.includes(effect)) {\r\n      try {\r\n        effectStack.push(effect);\r\n        activeEffect = effect;\r\n        return fn(); // 执行fn时，会取值，执行响应式数据的 get 方法\r\n      } finally {\r\n        effectStack.pop();\r\n        activeEffect = effectStack[effectStack.length - 1];\r\n      }\r\n    }\r\n  };\r\n  effect.id = uid++; // 制作一个effect标识，用于区分effect\r\n  effect._isEffect = true; // 用于标识这是个响应式的effect\r\n  effect.raw = fn; // 保留effect对应的原函数\r\n  effect.options = options; // 在effect上保存用户的属性\r\n  return effect;\r\n}\r\n/**\r\n * 让某个对象中的属性【收集】当前它对应的effect函数\r\n * 一个属性可能对应多个effect，一个effect也可能对应多个属性\r\n */\r\nconst targetMap = new WeakMap();\r\nexport function track(target, type, key) {\r\n  if (activeEffect === undefined) {\r\n    return;\r\n  }\r\n  //   收集依赖的结构：\r\n  //   targetMap(WeakMap): {\r\n  //     target1(Map): {\r\n  //         key1(Set): [effect1, effect2]\r\n  //     },\r\n  //     target2(Map): {}\r\n  //   }\r\n  let depsMap = targetMap.get(target);\r\n  if (!depsMap) {\r\n    targetMap.set(target, (depsMap = new Map()));\r\n  }\r\n  let dep = depsMap.get(key);\r\n  if (!dep) {\r\n    depsMap.set(key, (dep = new Set()));\r\n  }\r\n  if (!dep.has(activeEffect)) {\r\n    dep.add(activeEffect);\r\n  }\r\n}\r\n\r\n// 找属性对应的 effect 让其执行（数组、对象）\r\nexport function trigger(target, type, key?, newValue?, oldValue?) {\r\n  console.log(target, type, key, newValue, oldValue);\r\n  // 如果这个属性没有收集过effect，那不需要做任何操作\r\n  const depsMap = targetMap.get(target);\r\n  if (!depsMap) return;\r\n\r\n  // 我要将所有要执行的 effect 全部存到一个新的集合中，最终一起执行\r\n  const effects = new Set(); // 使用Set结构对effect去重\r\n  const add = (dep) => {\r\n    if (dep) {\r\n      dep.forEach((effect) => effects.add(effect));\r\n    }\r\n  };\r\n\r\n  // 1. 如果修改的是数组的length属性\r\n  if (key === \"length\" && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      // 数组 length 属性对应的effect需要重新执行\r\n      // 如果更改的长度小于收集的索引，那么这个索引收集的effect也需要重新执行\r\n      if (key === \"length\" || key >= newValue) {\r\n        add(dep);\r\n      }\r\n    });\r\n  } else {\r\n    // 2. 如果是对象\r\n    if (key !== undefined) {\r\n      // 这里一定是修改属性\r\n      // 新增属性不会触发它的effect重新执行（如果是新增的属性，下方的get方法返回undefined），因为新增的属性之前没有出现在effect的fn中，该属性没有收集过effect\r\n      add(depsMap.get(key));\r\n    }\r\n    // 3. 如果修改数组中的某一个索引对应的元素\r\n    switch (type) {\r\n      // 如果通过索引增加了数组长度就触发长度的更新\r\n      case TriggerOrTypes.ADD:\r\n        if (isArray(target) && isIntegerKey(key)) {\r\n          add(depsMap.get(\"length\"));\r\n        }\r\n    }\r\n  }\r\n  effects.forEach((effect: any) => effect());\r\n}\r\n","import {\r\n  extend,\r\n  hasChanged,\r\n  hasOwn,\r\n  isArray,\r\n  isIntegerKey,\r\n  isObject,\r\n} from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive, readonly } from \"./reactive\";\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  // receiver 是代理对象，即 proxy 对象\r\n  return function get(target, key, receiver) {\r\n    /**\r\n     * Reflect 的优势：\r\n     * 1. 后续 Object 上的方法都会被迁移到 Reflect 上，例如 Object.getPrototypeof()\r\n     * 2. 通过 target[key] = value 修改失败不会报错，而 Reflect.set 有返回值，可以判断是否修改成功\r\n     * 3. Reflect 方法具备返回值\r\n     */\r\n    const res = Reflect.get(target, key, receiver);\r\n    if (!isReadonly) {\r\n      // 执行effect的fn时会取值，此时将对应的 effect 收集起来\r\n      track(target, TrackOpTypes.GET, key);\r\n    }\r\n    if (shallow) {\r\n      return res;\r\n    }\r\n    if (isObject(res)) {\r\n      // 【***】vue3 当取值时才进行递归处理子属性，而vue2是在初始化时就一次性递归到底对对象所有层级的属性进行代理\r\n      return isReadonly ? readonly(res) : reactive(res);\r\n    }\r\n    return res;\r\n  };\r\n}\r\nfunction createSetter(shallow = false) {\r\n  return function set(target, key, value, receiver) {\r\n    const oldValue = target[key]; // 获取老的值\r\n    // 当通过索引修改数组元素时hadKey为true，当通过索引新增数组元素时hadKey为false；当修改对象属性时hadKey为true，当新增对象属性时hadKey为false\r\n    let hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key);\r\n    const result = Reflect.set(target, key, value, receiver); // 修改属性\r\n\r\n    // 当数据更新时，通知对应属性的所有 effect 重新执行\r\n    if (!hadKey) {\r\n      // 通过索引新增数组元素，或新增对象属性时\r\n      trigger(target, TriggerOrTypes.ADD, key, value);\r\n    } else if (hasChanged(oldValue, value)) {\r\n      // 通过索引修改数组元素，或修改对象属性和数组length时\r\n      trigger(target, TriggerOrTypes.SET, key, value, oldValue);\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n\r\nconst get = createGetter();\r\nconst shallowGet = createGetter(false, true);\r\nconst readonlyGet = createGetter(true);\r\nconst shallowReadonlyGet = createGetter(true, true);\r\n\r\nconst set = createSetter();\r\nconst shallowSet = createSetter(true);\r\n\r\nexport const mutableHandlers = {\r\n  get,\r\n  set,\r\n};\r\nexport const shallowReactiveHandlers = {\r\n  get: shallowGet,\r\n  set: shallowSet,\r\n};\r\n\r\nlet readonlyObj = {\r\n  set: (target, key) => {\r\n    console.warn(`set on key ${key} failed`);\r\n  },\r\n};\r\nexport const readonlyHandlers = extend(\r\n  {\r\n    get: readonlyGet,\r\n  },\r\n  readonlyObj\r\n);\r\nexport const shallowReadonlyHandlers = extend(\r\n  {\r\n    get: shallowReadonlyGet,\r\n  },\r\n  readonlyObj\r\n);\r\n","import { isObject } from \"@vue/shared\";\r\nimport { mutableHandlers, shallowReactiveHandlers, readonlyHandlers, shallowReadonlyHandlers } from './baseHandlers'\r\nexport function reactive(target) {\r\n  return createReactiveObject(target, false, mutableHandlers);\r\n}\r\nexport function shallowReactive(target) {\r\n  return createReactiveObject(target, false, shallowReactiveHandlers);\r\n}\r\nexport function readonly(target) {\r\n  return createReactiveObject(target, true, readonlyHandlers);\r\n}\r\nexport function shallowReadonly(target) {\r\n  return createReactiveObject(target, true, shallowReadonlyHandlers);\r\n}\r\n\r\n// WeakMap 存储的key只能是对象，key是对对象的弱引用，会进行垃圾回收，不会造成内存泄漏\r\n// 使用两个 WeakMap 存储 proxy 对象，是因为 readonly 可以处理一个已经经过代理的对象\r\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nexport function createReactiveObject(target, isReadonly, baseHandlers) {\r\n  // reactive 只处理对象\r\n  if (!isObject(target)) {\r\n    return target;\r\n  }\r\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n  const existProxy = proxyMap.get(target);\r\n  if (existProxy) {\r\n    return existProxy; // 如果已经代理过了，则直接返回\r\n  }\r\n  const proxy = new Proxy(target, baseHandlers);\r\n  proxyMap.set(target, proxy); // 将要代理的对象和对应的代理结果缓存起来\r\n  return proxy;\r\n}\r\n"],"names":[],"mappings":"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"}